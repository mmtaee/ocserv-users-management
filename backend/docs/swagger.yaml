basePath: /api
definitions:
  middlewares.PermissionDenied:
    properties:
      error:
        type: string
    type: object
  middlewares.Unauthorized:
    properties:
      error:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      last_login:
        type: string
      uid:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    required:
    - id
    - is_admin
    - last_login
    - uid
    - username
    type: object
  request.ErrorResponse:
    properties:
      error:
        items:
          type: string
        type: array
      message:
        items:
          type: string
        type: array
    required:
    - error
    - message
    type: object
  request.Meta:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total_records:
        type: integer
    required:
    - page
    - page_size
    - total_records
    type: object
  system.ChangeUserPassword:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  system.CreateUserData:
    properties:
      admin:
        type: boolean
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  system.GetSystemInitResponse:
    properties:
      google_captcha_site_key:
        type: string
    type: object
  system.GetSystemResponse:
    properties:
      google_captcha_secret_key:
        type: string
      google_captcha_site_key:
        type: string
    type: object
  system.LoginData:
    properties:
      password:
        example: doe123456
        maxLength: 16
        minLength: 2
        type: string
      remember_me:
        type: boolean
      token:
        type: string
      username:
        example: john_doe
        maxLength: 16
        minLength: 2
        type: string
    required:
    - password
    - username
    type: object
  system.PatchSystemUpdateData:
    properties:
      google_captcha_secret_key:
        type: string
      google_captcha_site_key:
        type: string
    required:
    - google_captcha_secret_key
    - google_captcha_site_key
    type: object
  system.UserLoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    required:
    - token
    - user
    type: object
  system.UsersResponse:
    properties:
      meta:
        $ref: '#/definitions/request.Meta'
      result:
        items:
          $ref: '#/definitions/models.User'
        type: array
    required:
    - meta
    type: object
info:
  contact: {}
  description: This is a sample Ocserv User management Api server.
  title: Ocserv User management Example Api
  version: "1.0"
paths:
  /system:
    get:
      consumes:
      - application/json
      description: Get panel System Config
      parameters:
      - description: Bearer TOKEN
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.GetSystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/request.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.Unauthorized'
      summary: Get panel System Config
      tags:
      - System
    patch:
      consumes:
      - application/json
      description: Update panel System Config
      parameters:
      - description: update system config data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/system.PatchSystemUpdateData'
      - description: Bearer TOKEN
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.GetSystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/request.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.Unauthorized'
      summary: Update panel System Config
      tags:
      - System
  /system/Init:
    get:
      consumes:
      - application/json
      description: Get panel System init Config
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.GetSystemInitResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/request.ErrorResponse'
      summary: Get panel System init Config
      tags:
      - System
  /system/users:
    get:
      consumes:
      - application/json
      description: List of Admin or simple users
      parameters:
      - description: Page number, starting from 1
        in: query
        minimum: 1
        name: page
        type: integer
      - description: Number of items per page
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - description: Field to order by
        in: query
        name: order
        type: string
      - description: Sort order, either ASC or DESC
        enum:
        - ASC
        - DESC
        in: query
        name: sort
        type: string
      - description: Bearer TOKEN
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.UsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/request.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.Unauthorized'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/middlewares.PermissionDenied'
      summary: List of Admin or simple users
      tags:
      - System(Users)
  /system/users/{uid}:
    delete:
      consumes:
      - application/json
      description: Delete simple user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer TOKEN
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/request.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.Unauthorized'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/middlewares.PermissionDenied'
      summary: Delete simple user
      tags:
      - System(Users)
  /system/users/{uid}/password:
    post:
      consumes:
      - application/json
      description: Change user password
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: user new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/system.ChangeUserPassword'
      - description: Bearer TOKEN
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.UsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/request.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.Unauthorized'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/middlewares.PermissionDenied'
      summary: Change user password
      tags:
      - System(Users)
  /system/users/login:
    post:
      consumes:
      - application/json
      description: Create user Admin or simple
      parameters:
      - description: Bearer TOKEN
        in: header
        name: Authorization
        required: true
        type: string
      - description: create user data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/system.CreateUserData'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/request.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.Unauthorized'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/middlewares.PermissionDenied'
      summary: Create user
      tags:
      - System(Users)
swagger: "2.0"
