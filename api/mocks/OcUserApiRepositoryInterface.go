// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// OcUserApiRepositoryInterface is an autogenerated mock type for the OcUserApiRepositoryInterface type
type OcUserApiRepositoryInterface struct {
	mock.Mock
}

// CreateUserApi provides a mock function with given fields: c, group, username, password
func (_m *OcUserApiRepositoryInterface) CreateUserApi(c context.Context, group string, username string, password string) error {
	ret := _m.Called(c, group, username, password)

	if len(ret) == 0 {
		panic("no return value specified for CreateUserApi")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) error); ok {
		r0 = rf(c, group, username, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteUserApi provides a mock function with given fields: c, username
func (_m *OcUserApiRepositoryInterface) DeleteUserApi(c context.Context, username string) error {
	ret := _m.Called(c, username)

	if len(ret) == 0 {
		panic("no return value specified for DeleteUserApi")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(c, username)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// LockUserApi provides a mock function with given fields: c, username
func (_m *OcUserApiRepositoryInterface) LockUserApi(c context.Context, username string) error {
	ret := _m.Called(c, username)

	if len(ret) == 0 {
		panic("no return value specified for LockUserApi")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(c, username)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UnLockUserApi provides a mock function with given fields: c, username
func (_m *OcUserApiRepositoryInterface) UnLockUserApi(c context.Context, username string) error {
	ret := _m.Called(c, username)

	if len(ret) == 0 {
		panic("no return value specified for UnLockUserApi")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(c, username)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewOcUserApiRepositoryInterface creates a new instance of OcUserApiRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOcUserApiRepositoryInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *OcUserApiRepositoryInterface {
	mock := &OcUserApiRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
